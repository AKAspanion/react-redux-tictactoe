{"version":3,"sources":["components/Box.js","components/Grid.js","components/App.js","actions/index.js","reducers/updateReducer.js","reducers/index.js","index.js"],"names":["Box","onButtonClick","_this","props","onBoxClick","react_default","a","createElement","className","onClick","this","value","Component","Grid","renderBox","i","components_Box","boxes","App","handleClick","current","calculateWinner","xIsNext","updateGrid","isGameOver","every","e","reset","resetGrid","Array","fill","status","_this2","winner","components_Grid","lines","length","_lines$i","Object","slicedToArray","b","c","connect","state","game","grid","type","payload","initial","INITIAL_STATE","combineReducers","arguments","undefined","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","react_redux_es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7d162351.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './style.css'\r\n\r\nclass Box extends Component {\r\n\r\n    onButtonClick = () =>{\r\n        this.props.onBoxClick()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                className=\"box\"\r\n                onClick={this.onButtonClick}\r\n            >\r\n            {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Box;\r\n","import React, { Component } from 'react';\r\n\r\nimport './style.css'\r\nimport Box from './Box';\r\n\r\nclass Grid extends Component {\r\n\r\n    renderBox = (i) =>{\r\n        return(\r\n            <Box\r\n                value={this.props.boxes[i]}\r\n                onBoxClick={() => this.props.onBoxClick(i)}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"Grid\">\r\n            <div className=\"\">\r\n                {this.renderBox(0)}\r\n                {this.renderBox(1)}\r\n                {this.renderBox(2)}\r\n            </div>\r\n            <div className=\"\">\r\n                {this.renderBox(3)}\r\n                {this.renderBox(4)}\r\n                {this.renderBox(5)}\r\n            </div>\r\n            <div className=\"\">\r\n                {this.renderBox(6)}\r\n                {this.renderBox(7)}\r\n                {this.renderBox(8)}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {updateGrid, resetGrid} from '../actions'\r\nimport Grid from './Grid';\r\nimport './style.css'\r\n\r\nclass App extends Component {\r\n    handleClick = (i) =>{\r\n        const current = this.props.boxes\r\n        if (calculateWinner(current) || current[i]) {\r\n            return;\r\n        }\r\n        current[i] = this.props.xIsNext ? 'X' : 'O'\r\n        this.props.updateGrid({\r\n            boxes: current\r\n        })\r\n    }\r\n    isGameOver = (current) =>{\r\n        return current.every((e) =>{\r\n            return e !== null\r\n        })\r\n    }\r\n    reset = () =>{\r\n        this.props.resetGrid({\r\n            boxes: Array(9).fill(null),\r\n            xIsNext: true\r\n        })\r\n    }\r\n    render() {\r\n        const current = this.props.boxes;\r\n        const winner = calculateWinner(current);\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {            \r\n            if(this.isGameOver(current)){\r\n                status = 'Game Over!!'\r\n            }\r\n            else{\r\n                status = \"Next player \" + (this.props.xIsNext ? \"X\" : \"O\");\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"app\">\r\n                    <Grid\r\n                        boxes={this.props.boxes}\r\n                        onBoxClick={(i) => this.handleClick(i)}\r\n                    />       \r\n                </div>            \r\n                <div>{status}</div>\r\n                <div>\r\n                    <br />\r\n                    <button \r\n                        onClick={this.reset}>\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst calculateWinner = (boxes) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\r\n            return boxes[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return{\r\n        boxes: state.game.boxes,\r\n        xIsNext: state.game.xIsNext\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateGrid, resetGrid})(App);\r\n","export const updateGrid = (grid) => {\r\n    return{\r\n        type: \"UPDATE_GRID\",\r\n        payload: grid\r\n    }\r\n}\r\n\r\nexport const resetGrid = (initial) => {\r\n    return{\r\n        type: \"RESET\",\r\n        payload: initial\r\n    }\r\n}\r\n","const INITIAL_STATE = {    \r\n    boxes: Array(9).fill(null),\r\n    xIsNext: true\r\n}\r\n\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'UPDATE_GRID':\r\n            return { boxes: action.payload.boxes, xIsNext: !state.xIsNext}\r\n        case 'RESET':\r\n            return { boxes: action.payload.boxes, xIsNext: action.payload.xIsNext}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport updateReducer from './updateReducer';\r\n\r\nexport default combineReducers({\r\n    game: updateReducer\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware , compose } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n<Provider store={store}>\n    <App/>\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}